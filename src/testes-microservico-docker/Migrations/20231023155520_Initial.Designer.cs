// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestesMicroservicoDocker;

#nullable disable

namespace TestesMicroservicoDocker.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231023155520_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestesMicroservicoDocker.Entities.Pessoa", b =>
                {
                    b.Property<int>("Idpessoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idpessoa");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idpessoa"));

                    b.Property<DateTime?>("Datafundacao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datafundacao");

                    b.Property<DateTime?>("Datanascimento")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("datanascimento");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("documento");

                    b.Property<int>("Idpessoatipo")
                        .HasColumnType("integer")
                        .HasColumnName("idpessoatipo");

                    b.Property<string>("Nomecompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nomecompleto");

                    b.Property<string>("Nomeresumido")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nomeresumido");

                    b.HasKey("Idpessoa")
                        .HasName("pk_pessoa");

                    b.HasIndex("Idpessoatipo");

                    b.HasIndex(new[] { "Documento" }, "uk_pessoa")
                        .IsUnique();

                    b.ToTable("pessoa", (string)null);
                });

            modelBuilder.Entity("TestesMicroservicoDocker.Entities.Pessoatipo", b =>
                {
                    b.Property<int>("Idpessoatipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idpessoatipo");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idpessoatipo"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("descricao");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("tag");

                    b.HasKey("Idpessoatipo")
                        .HasName("pk_pessoatipo");

                    b.HasIndex(new[] { "Descricao" }, "uk_pessoatipo")
                        .IsUnique();

                    b.ToTable("pessoatipo", (string)null);
                });

            modelBuilder.Entity("TestesMicroservicoDocker.Entities.Pessoa", b =>
                {
                    b.HasOne("TestesMicroservicoDocker.Entities.Pessoatipo", "IdpessoatipoNavigation")
                        .WithMany("Pessoas")
                        .HasForeignKey("Idpessoatipo")
                        .IsRequired()
                        .HasConstraintName("fk_pessoa_pessoatipo");

                    b.Navigation("IdpessoatipoNavigation");
                });

            modelBuilder.Entity("TestesMicroservicoDocker.Entities.Pessoatipo", b =>
                {
                    b.Navigation("Pessoas");
                });
#pragma warning restore 612, 618
        }
    }
}
